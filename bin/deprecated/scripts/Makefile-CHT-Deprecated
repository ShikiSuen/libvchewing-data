.PHONY: sort clean

all: concat tidy sort check data.txt data-plain-bpmf.txt

concat:
	@echo "\033[0;32m//$$(tput bold) Concatenating BPMFBase.txt, BPMFMappings.txt, and phrase.occ files.$$(tput sgr0)\033[0m"
	@> BPMFBase.txt && awk 'NR>1 && FNR==1{print ""};1' ./components/cht/BPMFBase*.txt > ./BPMFBase.txt
	@> BPMFMappings.txt && awk 'NR>1 && FNR==1{print ""};1' ./components/cht/BPMFMappings*.txt > ./BPMFMappings-tmp.txt
	@grep '[a-z0-9]' ./BPMFMappings-tmp.txt | sed -f ./utilities/CONV-HYPY2BPMF.SED > ./BPMFMappings.txt
	@grep -v '[a-z0-9]' ./BPMFMappings-tmp.txt >> ./BPMFMappings.txt && rm ./BPMFMappings-tmp.txt
	@> phrase.occ && awk 'NR>1 && FNR==1{print ""};1' ./components/cht/freq*.txt > ./phrase.occ

install: all

data-plain-bpmf.txt: bin/cook-plain-bpmf.py BPMFBase.txt BPMFPunctuations.txt
	bin/cook-plain-bpmf.py BPMFBase.txt BPMFPunctuations.txt data-plain-bpmf.txt

data.txt: bin/cook.py BPMFBase.txt BPMFMappings.txt BPMFPunctuations.txt \
          PhraseFreq.txt phrase.occ Symbols.txt \
          heterophony1.list heterophony2.list  heterophony3.list
	bin/cook.py PhraseFreq.txt BPMFMappings.txt BPMFBase.txt $@
	cat BPMFPunctuations.txt >> $@
	cat Symbols.txt >> $@

PhraseFreq.txt: bin/buildFreq.py phrase.occ exclusion.txt
	bin/buildFreq.py

clean:
	@echo "\033[0;32m//$$(tput bold) Cleaning……$$(tput sgr0)\033[0m"
	rm -f data.txt data-plain-bpmf.txt phrase.list PhraseFreq.txt BPMFBase.txt BPMFMappings.txt phrase.occ tmp || true

# FOR INTERNAL USE
_install: all
	@pkill -HUP -f McBopomofo || echo "// Deploying Dictionary files for McBopomofo...."
	rm $(HOME)/Library/Input\ Methods/McBopomofo.app/Contents/Resources/data*.txt || true
	@cp -a data.txt $(HOME)/Library/Input\ Methods/McBopomofo.app/Contents/Resources/data.txt
	@cp -a data-plain-bpmf.txt $(HOME)/Library/Input\ Methods/McBopomofo.app/Contents/Resources/data-plain-bpmf.txt
	@pkill -HUP -f McBopomofo || echo "// McBopomofo is not running"
_deploy: _install
	@rsync -avx data.txt data-plain-bpmf.txt $(RHOST):"Library/Input\ Methods/McBopomofo.app/Contents/Resources/"
	@test "$(RHOST)" && ssh $(RHOST) "pkill -HUP -f McBopomofo || echo McBopomofo is not running" || true

sort:
	@echo "\033[0;32m//$$(tput bold) Sorting contents of BPMFBase.txt, BPMFMappings.txt, and phrase.occ files.$$(tput sgr0)\033[0m"
	@env LC_COLLATE=C.UTF-8 uniq phrase.occ | awk 'BEGIN{FS=OFS="\t"}{a[$$1]+=$$2}END{for(i in a){print i,a[i]}}' | sort -k1,1 | grep -v '^$$' | sed -e "/^\t/d" > tmp && mv tmp phrase.occ
	@env LC_COLLATE=C.UTF-8 sort -u -k1 BPMFBase.txt | grep -v '^$$' > tmp && mv tmp BPMFBase.txt
	@env LC_COLLATE=C.UTF-8 sort -u -k1 BPMFMappings.txt | grep -v '^$$' > tmp && mv tmp BPMFMappings.txt
	@env LC_COLLATE=C.UTF-8 sort -u -k1 heterophony1.list > tmp && mv tmp heterophony1.list
	@env LC_COLLATE=C.UTF-8 sort -u -k1 heterophony2.list > tmp && mv tmp heterophony2.list
	@env LC_COLLATE=C.UTF-8 sort -u -k1 heterophony3.list > tmp && mv tmp heterophony3.list
	@env LC_COLLATE=C.UTF-8 sort -u -k1 exclusion.txt > tmp && mv tmp exclusion.txt

check:
	@echo "\033[0;32m//$$(tput bold) Performing sanity check towards BPMFBase.txt, BPMFMappings.txt, and phrase.occ files.$$(tput sgr0)\033[0m"
	@awk 'length($$1)/3!=NF-1' BPMFMappings.txt
	@awk '{print $$2,$$3,$$4,$$5,$$6,$$7}' BPMFMappings.txt | awk '/一/'
	@echo "BPMFMappings.txt line count:"
	@awk '{print $$1}' BPMFMappings.txt | uniq | wc -l
	@echo "phrase.occ line count:"
	@awk 'length($$1)>3{print $$1}' phrase.occ | uniq | wc -l

tidy:
	@echo "\033[0;32m//$$(tput bold) Formatting contents of BPMFBase.txt, BPMFMappings.txt, and phrase.occ files.$$(tput sgr0)\033[0m"
	@sed -i '' -e "s/\t/ /g;s/  / /g;s/ \n/\n/g;s/\n\n/\n/g;/^#/d" BPMFBase.txt
	@sed -i '' -e "s/ /\t/g;s/\x{3000}/\t/g;s/\t+/\t/g;s/\t\n/\n/g;/^#/d" phrase.occ
	@sed -i '' -e "s/\t/ /g;s/\x{3000}/ /g;s/ +/ /g;s/ \n/\n/g;s/ $$//g;/^#/d" BPMFMappings.txt
	@sed -i '' -e "s/｜/ㄧ/g;s/\t/ /g" BPMFMappings.txt
	@sed -i '' -e "s/ [:0-9:]*$$//g" BPMFMappings.txt
	@sed -i '' -e "s/1/˙/g;s/2/ˊ/g;s/3/ˇ/g;s/4/ˋ/g" BPMFMappings.txt

_phrase.occ: phrase.list
	@bin/count.occurrence.py phrase.list > tmp && mv tmp phrase.occ

phrase.list: BPMFBase.txt BPMFMappings.txt
	awk 'length($$1)<4{print $$1}' BPMFBase.txt > tmp
	awk '{print $$1}'         BPMFMappings.txt >> tmp
	env LC_COLLATE=C.UTF-8 sort -u tmp > phrase.list
_myinstall:
	cd ../.. && \
         xcodebuild -target McBopomofo -configuration Release && \
         rsync -avx --delete build/Release/McBopomofo.app/ \
            ~/Library/Input\ Methods/McBopomofo.app/
	@pgrep McBopomofo && killall -HUP McBopomofo || echo -n
_myclean:
	cd ../.. && xcodebuild clean
_mydebuginstall:
	cd ../.. && \
         xcodebuild -target McBopomofo -configuration Debug && \
         rsync -avx --delete build/Debug/McBopomofo.app/ \
            ~/Library/Input\ Methods/McBopomofo.app/
	@pgrep McBopomofo && killall -HUP McBopomofo || echo -n
_mycodecheck:
	@for myfile in bin/*.py; do \
            pep8-3.9 --ignore=E221,E226,E501,E701 $$myfile; \
        done
